FROM python:3.9-slim

WORKDIR /app

# Install compatible versions of Flask and Werkzeug
RUN pip install flask==2.0.1 werkzeug==2.0.3

# Install Flask extensions and other dependencies
RUN pip install flask-cors flask-restful flask-sqlalchemy flask-migrate \
    boto3 google-cloud-storage azure-storage-blob \
    terraform-local python-terraform pyyaml requests \
    pytest pytest-cov flake8 black

# Copy the src directory to /app/src
COPY src /app/src

# Create __init__.py files to make directories into packages
RUN touch /app/src/__init__.py
RUN mkdir -p /app/src/api && touch /app/src/api/__init__.py

# Create a wrapper script to handle imports correctly
RUN echo '#!/usr/bin/env python3\n\
import os\n\
import sys\n\
\n\
# Add the current directory to Python path\n\
sys.path.insert(0, os.path.abspath("."))\n\
\n\
# Import and run the application\n\
from src.main import create_app\n\
\n\
if __name__ == "__main__":\n\
    app = create_app()\n\
    app.run(host="0.0.0.0", port=5000)\n\
' > /app/run.py
RUN chmod +x /app/run.py

# Set environment variables
ENV FLASK_APP=/app/src/main.py
ENV FLASK_ENV=production
ENV PYTHONPATH=/app

# Expose the port
EXPOSE 5000

# Run the application using the wrapper script
CMD ["python", "/app/run.py"]
