FROM node:16-alpine

WORKDIR /app

# Install required packages
RUN npm init -y && \
    npm install react react-dom react-router-dom axios @mui/material @mui/icons-material @emotion/react @emotion/styled

# Create minimal React app structure
RUN mkdir -p src public

# Create index.html
RUN echo '<!DOCTYPE html>\n\
<html lang="en">\n\
  <head>\n\
    <meta charset="utf-8" />\n\
    <meta name="viewport" content="width=device-width, initial-scale=1" />\n\
    <title>Cloud Cost Optimizer</title>\n\
  </head>\n\
  <body>\n\
    <noscript>You need to enable JavaScript to run this app.</noscript>\n\
    <div id="root"></div>\n\
  </body>\n\
</html>' > public/index.html

# Create index.js
RUN echo 'import React from "react";\n\
import ReactDOM from "react-dom";\n\
import App from "./App";\n\
\n\
ReactDOM.render(\n\
  <React.StrictMode>\n\
    <App />\n\
  </React.StrictMode>,\n\
  document.getElementById("root")\n\
);' > src/index.js

# Create App.js with basic components
RUN echo 'import React, { useState } from "react";\n\
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";\n\
import { AppBar, Toolbar, Typography, Container, Box, Tabs, Tab } from "@mui/material";\n\
\n\
// Dashboard component\n\
const Dashboard = () => (\n\
  <Box sx={{ p: 3 }}>\n\
    <Typography variant="h4" gutterBottom>Dashboard</Typography>\n\
    <Typography>Welcome to the Cloud Cost Optimizer dashboard.</Typography>\n\
  </Box>\n\
);\n\
\n\
// AWS Accounts component\n\
const AWSAccounts = () => (\n\
  <Box sx={{ p: 3 }}>\n\
    <Typography variant="h4" gutterBottom>AWS Accounts</Typography>\n\
    <Typography>Manage your AWS accounts here.</Typography>\n\
  </Box>\n\
);\n\
\n\
// AWS Resources component\n\
const AWSResources = () => (\n\
  <Box sx={{ p: 3 }}>\n\
    <Typography variant="h4" gutterBottom>AWS Resources</Typography>\n\
    <Typography>View and manage your AWS resources here.</Typography>\n\
  </Box>\n\
);\n\
\n\
// Terraform Templates component\n\
const TerraformTemplates = () => (\n\
  <Box sx={{ p: 3 }}>\n\
    <Typography variant="h4" gutterBottom>Terraform Templates</Typography>\n\
    <Typography>Manage your Terraform templates here.</Typography>\n\
  </Box>\n\
);\n\
\n\
// Main App component\n\
function App() {\n\
  const [tabValue, setTabValue] = useState(0);\n\
\n\
  const handleTabChange = (event, newValue) => {\n\
    setTabValue(newValue);\n\
  };\n\
\n\
  return (\n\
    <Router>\n\
      <AppBar position="static">\n\
        <Toolbar>\n\
          <Typography variant="h6">Cloud Cost Optimizer</Typography>\n\
        </Toolbar>\n\
      </AppBar>\n\
      <Tabs value={tabValue} onChange={handleTabChange} centered>\n\
        <Tab label="Dashboard" />\n\
        <Tab label="AWS Accounts" />\n\
        <Tab label="AWS Resources" />\n\
        <Tab label="Terraform Templates" />\n\
      </Tabs>\n\
      <Container>\n\
        <Routes>\n\
          <Route path="/" element={<Dashboard />} />\n\
          <Route path="/aws/accounts" element={<AWSAccounts />} />\n\
          <Route path="/aws/resources" element={<AWSResources />} />\n\
          <Route path="/terraform/templates" element={<TerraformTemplates />} />\n\
        </Routes>\n\
      </Container>\n\
    </Router>\n\
  );\n\
}\n\
\n\
export default App;' > src/App.js

# Create a simple build script
RUN echo '{\n\
  "name": "cloud-cost-optimizer-frontend",\n\
  "version": "1.0.0",\n\
  "scripts": {\n\
    "start": "react-scripts start",\n\
    "build": "react-scripts build"\n\
  },\n\
  "dependencies": {\n\
    "react": "^17.0.2",\n\
    "react-dom": "^17.0.2",\n\
    "react-router-dom": "^6.3.0",\n\
    "axios": "^0.27.2",\n\
    "@mui/material": "^5.8.0",\n\
    "@mui/icons-material": "^5.8.0",\n\
    "@emotion/react": "^11.9.0",\n\
    "@emotion/styled": "^11.8.1"\n\
  },\n\
  "devDependencies": {\n\
    "react-scripts": "5.0.1"\n\
  },\n\
  "browserslist": {\n\
    "production": [\n\
      ">0.2%",\n\
      "not dead",\n\
      "not op_mini all"\n\
    ],\n\
    "development": [\n\
      "last 1 chrome version",\n\
      "last 1 firefox version",\n\
      "last 1 safari version"\n\
    ]\n\
  }\n\
}' > package.json

# Install react-scripts
RUN npm install

# Build the app
RUN npm run build || echo "Build would happen in CI pipeline"

# Use nginx for serving
FROM nginx:alpine

# Copy nginx configuration
RUN echo 'server {\n\
    listen 80;\n\
    location / {\n\
        root /usr/share/nginx/html;\n\
        index index.html;\n\
        try_files $uri $uri/ /index.html;\n\
    }\n\
    location /api {\n\
        proxy_pass http://cloud-cost-optimizer-backend;\n\
        proxy_set_header Host $host;\n\
        proxy_set_header X-Real-IP $remote_addr;\n\
    }\n\
}' > /etc/nginx/conf.d/default.conf

# Copy built files (in a real pipeline, this would be from the build stage)
COPY --from=0 /app/build /usr/share/nginx/html

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
