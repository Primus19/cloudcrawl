FROM node:16-alpine

WORKDIR /app

# Install required packages
RUN npm init -y && \
    npm install react react-dom react-router-dom axios @mui/material @mui/icons-material @emotion/react @emotion/styled

# Create minimal React app structure
RUN mkdir -p src public

# Create index.html
RUN cat > public/index.html << 'EOL'
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Cloud Cost Optimizer</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>
EOL

# Create index.js
RUN cat > src/index.js << 'EOL'
import React from "react";
import ReactDOM from "react-dom";
import App from "./App";

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById("root")
);
EOL

# Create App.js with basic components
RUN cat > src/App.js << 'EOL'
import React, { useState } from "react";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import { AppBar, Toolbar, Typography, Container, Box, Tabs, Tab } from "@mui/material";

// Dashboard component
const Dashboard = () => (
  <Box sx={{ p: 3 }}>
    <Typography variant="h4" gutterBottom>Dashboard</Typography>
    <Typography>Welcome to the Cloud Cost Optimizer dashboard.</Typography>
  </Box>
);

// AWS Accounts component
const AWSAccounts = () => (
  <Box sx={{ p: 3 }}>
    <Typography variant="h4" gutterBottom>AWS Accounts</Typography>
    <Typography>Manage your AWS accounts here.</Typography>
  </Box>
);

// AWS Resources component
const AWSResources = () => (
  <Box sx={{ p: 3 }}>
    <Typography variant="h4" gutterBottom>AWS Resources</Typography>
    <Typography>View and manage your AWS resources here.</Typography>
  </Box>
);

// Terraform Templates component
const TerraformTemplates = () => (
  <Box sx={{ p: 3 }}>
    <Typography variant="h4" gutterBottom>Terraform Templates</Typography>
    <Typography>Manage your Terraform templates here.</Typography>
  </Box>
);

// Main App component
function App() {
  const [tabValue, setTabValue] = useState(0);

  const handleTabChange = (event, newValue) => {
    setTabValue(newValue);
  };

  return (
    <Router>
      <AppBar position="static">
        <Toolbar>
          <Typography variant="h6">Cloud Cost Optimizer</Typography>
        </Toolbar>
      </AppBar>
      <Tabs value={tabValue} onChange={handleTabChange} centered>
        <Tab label="Dashboard" />
        <Tab label="AWS Accounts" />
        <Tab label="AWS Resources" />
        <Tab label="Terraform Templates" />
      </Tabs>
      <Container>
        <Routes>
          <Route path="/" element={<Dashboard />} />
          <Route path="/aws/accounts" element={<AWSAccounts />} />
          <Route path="/aws/resources" element={<AWSResources />} />
          <Route path="/terraform/templates" element={<TerraformTemplates />} />
        </Routes>
      </Container>
    </Router>
  );
}

export default App;
EOL

# Create a proper package.json file using heredoc
RUN cat > package.json << 'EOL'
{
  "name": "cloud-cost-optimizer-frontend",
  "version": "1.0.0",
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build"
  },
  "dependencies": {
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-router-dom": "^6.3.0",
    "axios": "^0.27.2",
    "@mui/material": "^5.8.0",
    "@mui/icons-material": "^5.8.0",
    "@emotion/react": "^11.9.0",
    "@emotion/styled": "^11.8.1"
  },
  "devDependencies": {
    "react-scripts": "5.0.1"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
EOL

# Install react-scripts
RUN npm install

# Build the app
RUN echo "Build would happen in CI pipeline"

# Use nginx for serving
FROM nginx:alpine

# Copy nginx configuration
RUN cat > /etc/nginx/conf.d/default.conf << 'EOL'
server {
    listen 80;
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
    location /api {
        proxy_pass http://cloud-cost-optimizer-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
EOL

# Create a placeholder index.html for the nginx container
RUN mkdir -p /usr/share/nginx/html
RUN cat > /usr/share/nginx/html/index.html << 'EOL'
<!DOCTYPE html>
<html>
<head>
  <title>Cloud Cost Optimizer</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 0; padding: 30px; text-align: center; }
    h1 { color: #333; }
  </style>
</head>
<body>
  <h1>Cloud Cost Optimizer</h1>
  <p>Frontend placeholder. In a real build, this would be replaced with the React build output.</p>
</body>
</html>
EOL

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
